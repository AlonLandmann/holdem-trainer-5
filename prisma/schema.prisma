datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  email      String    @unique
  username   String
  hash       String?
  googleId   String?   @unique
  verified   Boolean   @default(false)
  token      String?
  role       String    @default("user")
  membership String    @default("free")
  session    Session?
  settings   Settings?
  folders    Folder[]
}

model Session {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
}

model Settings {
  id          Int     @id @default(autoincrement())
  manualSizes Boolean @default(false)
  user        User    @relation(fields: [userId], references: [id])
  userId      Int     @unique
}

model Folder {
  id     Int     @id @default(autoincrement())
  index  Int
  name   String  @default("New Folder")
  user   User    @relation(fields: [userId], references: [id])
  userId Int
  ranges Range[]
}

model Range {
  id            Int       @id @default(autoincrement())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  name          String    @default("New Range")
  stacks        Decimal[] @default([100, 100, 100, 100, 100, 100])
  matrix        Bytes
  folder        Folder    @relation(fields: [folderId], references: [id])
  folderId      Int
  history       Action[]  @relation("History")
  options       Action[]  @relation("Options")
  successors    Range[]   @relation("Pred-Succ")
  predecessor   Range?    @relation("Pred-Succ", fields: [predecessorId], references: [id])
  predecessorId Int?
}

model Action {
  id             Int    @id @default(autoincrement())
  index          Int
  type           String
  size           Int?
  historyRange   Range  @relation(name: "History", fields: [historyRangeId], references: [id])
  historyRangeId Int
  optionsRange   Range  @relation(name: "Options", fields: [optionsRangeId], references: [id])
  optionsRangeId Int
}
